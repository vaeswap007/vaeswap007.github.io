import{a4 as J0,a5 as $0,a6 as X,a7 as S0,a8 as Y,a9 as R,aa as n0,ab as H,ac as q,ad as K,ae as R0,af as w0,ag as h0,ah as v0,ai as _0,aj as e0,ak as I0,al as C0,am as p0,an as A0,ao as m0,ap as g0,aq as Dx,ar as Rx,as as _x,at as j0,au as Z0,av as q0,aw as K0,ax as E0,ay as Q0,az as l0,aA as X0,aB as Y0,aC as ee,aD as xe,aE as ae,aF as ce,aG as fe,aH as te,aI as re,aJ as de,aK as ne,aL as be,aM as ie,aN as oe,aO as se,aP as le,aQ as ue,aR as he,aS as pe,aT as me,aU as ge,aV as ye,aW as Se,aX as we,aY as ve,aZ as Ce,a_ as Ae,a$ as Ee,b0 as Pe,b1 as ke,b2 as Te,b3 as Fe,b4 as Me,b5 as Be,b6 as De,b7 as Re,b8 as _e,b9 as Ie,ba as Ke,bb as Le,bc as Oe,bd as Ue,be as We,bf as Ge,bg as He,bh as ze,bi as Ne,bj as Ve,bk as Je,bl as $e,bm as je,s as f0}from"./index.ac3816d8.js";import{a as Ze,p as qe,f as Qe,b as Xe,c as Ye}from"./ethers.79ca03ff.js";var ex=Object.freeze(Object.defineProperty({__proto__:null,decode:J0,encode:$0},Symbol.toStringTag,{value:"Module"}));const xx=`Ethereum Signed Message:
`;function L0(t){return typeof t=="string"&&(t=X(t)),S0(Y([X(xx),X(String(t.length)),t]))}function ax(t,x,d,b,l){t=R(t),x=R(x);let o,s=1;const i=new Uint8Array(b),F=new Uint8Array(x.length+4);F.set(x);let k,S;for(let A=1;A<=s;A++){F[x.length]=A>>24&255,F[x.length+1]=A>>16&255,F[x.length+2]=A>>8&255,F[x.length+3]=A&255;let B=R(n0(l,t,F));o||(o=B.length,S=new Uint8Array(o),s=Math.ceil(b/o),k=b-(s-1)*o),S.set(B);for(let u=1;u<d;u++){B=R(n0(l,t,B));for(let a=0;a<o;a++)S[a]^=B[a]}const j=(A-1)*o,r0=A===s?k:o;i.set(R(S).slice(0,r0),j)}return H(i)}const cx="wordlists/5.7.0",fx=new q(cx);class i0{constructor(x){fx.checkAbstract(new.target,i0),K(this,"locale",x)}split(x){return x.toLowerCase().split(/ +/g)}join(x){return x.join(" ")}static check(x){const d=[];for(let b=0;b<2048;b++){const l=x.getWord(b);if(b!==x.getWordIndex(l))return"0x";d.push(l)}return R0(d.join(`
`)+`
`)}static register(x,d){d||(d=x.locale)}}const tx="AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";let d0=null;function F0(t){if(d0==null&&(d0=tx.replace(/([A-Z])/g," $1").toLowerCase().substring(1).split(" "),i0.check(t)!=="0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"))throw d0=null,new Error("BIP39 Wordlist for en (English) FAILED")}class rx extends i0{constructor(){super("en")}getWord(x){return F0(this),d0[x]}getWordIndex(x){return F0(this),d0.indexOf(x)}}const O0=new rx;i0.register(O0);const M0={en:O0},dx="hdnode/5.7.0",b0=new q(dx),nx=w0.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),bx=X("Bitcoin seed"),a0=2147483648;function U0(t){return(1<<t)-1<<8-t}function ix(t){return(1<<t)-1}function s0(t){return C0(H(t),32)}function B0(t){return A0.encode(Y([t,v0(e0(e0(t)),0,4)]))}function P0(t){if(t==null)return M0.en;if(typeof t=="string"){const x=M0[t];return x==null&&b0.throwArgumentError("unknown locale","wordlist",t),x}return t}const x0={},ox="m/44'/60'/0'/0/0";class Z{constructor(x,d,b,l,o,s,i,F){if(x!==x0)throw new Error("HDNode constructor cannot be called directly");if(d){const k=new h0(d);K(this,"privateKey",k.privateKey),K(this,"publicKey",k.compressedPublicKey)}else K(this,"privateKey",null),K(this,"publicKey",H(b));K(this,"parentFingerprint",l),K(this,"fingerprint",v0(_0(e0(this.publicKey)),0,4)),K(this,"address",I0(this.publicKey)),K(this,"chainCode",o),K(this,"index",s),K(this,"depth",i),F==null?(K(this,"mnemonic",null),K(this,"path",null)):typeof F=="string"?(K(this,"mnemonic",null),K(this,"path",F)):(K(this,"mnemonic",F),K(this,"path",F.path))}get extendedKey(){if(this.depth>=256)throw new Error("Depth too large!");return B0(Y([this.privateKey!=null?"0x0488ADE4":"0x0488B21E",H(this.depth),this.parentFingerprint,C0(H(this.index),4),this.chainCode,this.privateKey!=null?Y(["0x00",this.privateKey]):this.publicKey]))}neuter(){return new Z(x0,null,this.publicKey,this.parentFingerprint,this.chainCode,this.index,this.depth,this.path)}_derive(x){if(x>4294967295)throw new Error("invalid index - "+String(x));let d=this.path;d&&(d+="/"+(x&~a0));const b=new Uint8Array(37);if(x&a0){if(!this.privateKey)throw new Error("cannot derive child of neutered node");b.set(R(this.privateKey),1),d&&(d+="'")}else b.set(R(this.publicKey));for(let A=24;A>=0;A-=8)b[33+(A>>3)]=x>>24-A&255;const l=R(n0(p0.sha512,this.chainCode,b)),o=l.slice(0,32),s=l.slice(32);let i=null,F=null;this.privateKey?i=s0(w0.from(o).add(this.privateKey).mod(nx)):F=new h0(H(o))._addPoint(this.publicKey);let k=d;const S=this.mnemonic;return S&&(k=Object.freeze({phrase:S.phrase,path:d,locale:S.locale||"en"})),new Z(x0,i,F,this.fingerprint,s0(s),x,this.depth+1,k)}derivePath(x){const d=x.split("/");if(d.length===0||d[0]==="m"&&this.depth!==0)throw new Error("invalid path - "+x);d[0]==="m"&&d.shift();let b=this;for(let l=0;l<d.length;l++){const o=d[l];if(o.match(/^[0-9]+'$/)){const s=parseInt(o.substring(0,o.length-1));if(s>=a0)throw new Error("invalid path index - "+o);b=b._derive(a0+s)}else if(o.match(/^[0-9]+$/)){const s=parseInt(o);if(s>=a0)throw new Error("invalid path index - "+o);b=b._derive(s)}else throw new Error("invalid path component - "+o)}return b}static _fromSeed(x,d){const b=R(x);if(b.length<16||b.length>64)throw new Error("invalid seed");const l=R(n0(p0.sha512,bx,b));return new Z(x0,s0(l.slice(0,32)),null,"0x00000000",s0(l.slice(32)),0,0,d)}static fromMnemonic(x,d,b){return b=P0(b),x=G0(k0(x,b),b),Z._fromSeed(W0(x,d),{phrase:x,path:"m",locale:b.locale})}static fromSeed(x){return Z._fromSeed(x,null)}static fromExtendedKey(x){const d=A0.decode(x);(d.length!==82||B0(d.slice(0,78))!==x)&&b0.throwArgumentError("invalid extended key","extendedKey","[REDACTED]");const b=d[4],l=H(d.slice(5,9)),o=parseInt(H(d.slice(9,13)).substring(2),16),s=H(d.slice(13,45)),i=d.slice(45,78);switch(H(d.slice(0,4))){case"0x0488b21e":case"0x043587cf":return new Z(x0,null,H(i),l,s,o,b,null);case"0x0488ade4":case"0x04358394 ":if(i[0]!==0)break;return new Z(x0,H(i.slice(1)),null,l,s,o,b,null)}return b0.throwArgumentError("invalid extended key","extendedKey","[REDACTED]")}}function W0(t,x){x||(x="");const d=X("mnemonic"+x,m0.NFKD);return ax(X(t,m0.NFKD),d,2048,64,"sha512")}function k0(t,x){x=P0(x),b0.checkNormalize();const d=x.split(t);if(d.length%3!==0)throw new Error("invalid mnemonic");const b=R(new Uint8Array(Math.ceil(11*d.length/8)));let l=0;for(let k=0;k<d.length;k++){let S=x.getWordIndex(d[k].normalize("NFKD"));if(S===-1)throw new Error("invalid mnemonic");for(let A=0;A<11;A++)S&1<<10-A&&(b[l>>3]|=1<<7-l%8),l++}const o=32*d.length/3,s=d.length/3,i=U0(s);if((R(e0(b.slice(0,o/8)))[0]&i)!==(b[b.length-1]&i))throw new Error("invalid checksum");return H(b.slice(0,o/8))}function G0(t,x){if(x=P0(x),t=R(t),t.length%4!==0||t.length<16||t.length>32)throw new Error("invalid entropy");const d=[0];let b=11;for(let s=0;s<t.length;s++)b>8?(d[d.length-1]<<=8,d[d.length-1]|=t[s],b-=8):(d[d.length-1]<<=b,d[d.length-1]|=t[s]>>8-b,d.push(t[s]&ix(8-b)),b+=3);const l=t.length/4,o=R(e0(t))[0]&U0(l);return d[d.length-1]<<=l,d[d.length-1]|=o>>8-l,x.join(d.map(s=>x.getWord(s)))}function sx(t,x){try{return k0(t,x),!0}catch{}return!1}function lx(t){return(typeof t!="number"||t<0||t>=a0||t%1)&&b0.throwArgumentError("invalid account index","index",t),`m/44'/60'/${t}'/0/0`}const ux="random/5.7.0",y0=new q(ux);function hx(){if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw new Error("unable to locate global object")}const D0=hx();let u0=D0.crypto||D0.msCrypto;(!u0||!u0.getRandomValues)&&(y0.warn("WARNING: Missing strong random number source"),u0={getRandomValues:function(t){return y0.throwError("no secure random source avaialble",q.errors.UNSUPPORTED_OPERATION,{operation:"crypto.getRandomValues"})}});function px(t){(t<=0||t>1024||t%1||t!=t)&&y0.throwArgumentError("invalid length","length",t);const x=new Uint8Array(t);return u0.getRandomValues(x),R(x)}function mx(t){t=t.slice();for(let x=t.length-1;x>0;x--){const d=Math.floor(Math.random()*(x+1)),b=t[x];t[x]=t[d],t[d]=b}return t}var H0={exports:{}};(function(t,x){(function(d){function b(e){return parseInt(e)===e}function l(e){if(!b(e.length))return!1;for(var r=0;r<e.length;r++)if(!b(e[r])||e[r]<0||e[r]>255)return!1;return!0}function o(e,r){if(e.buffer&&ArrayBuffer.isView(e)&&e.name==="Uint8Array")return r&&(e.slice?e=e.slice():e=Array.prototype.slice.call(e)),e;if(Array.isArray(e)){if(!l(e))throw new Error("Array contains invalid value: "+e);return new Uint8Array(e)}if(b(e.length)&&l(e))return new Uint8Array(e);throw new Error("unsupported array-like object")}function s(e){return new Uint8Array(e)}function i(e,r,n,c,f){(c!=null||f!=null)&&(e.slice?e=e.slice(c,f):e=Array.prototype.slice.call(e,c,f)),r.set(e,n)}var F=function(){function e(n){var c=[],f=0;for(n=encodeURI(n);f<n.length;){var m=n.charCodeAt(f++);m===37?(c.push(parseInt(n.substr(f,2),16)),f+=2):c.push(m)}return o(c)}function r(n){for(var c=[],f=0;f<n.length;){var m=n[f];m<128?(c.push(String.fromCharCode(m)),f++):m>191&&m<224?(c.push(String.fromCharCode((m&31)<<6|n[f+1]&63)),f+=2):(c.push(String.fromCharCode((m&15)<<12|(n[f+1]&63)<<6|n[f+2]&63)),f+=3)}return c.join("")}return{toBytes:e,fromBytes:r}}(),k=function(){function e(c){for(var f=[],m=0;m<c.length;m+=2)f.push(parseInt(c.substr(m,2),16));return f}var r="0123456789abcdef";function n(c){for(var f=[],m=0;m<c.length;m++){var D=c[m];f.push(r[(D&240)>>4]+r[D&15])}return f.join("")}return{toBytes:e,fromBytes:n}}(),S={16:10,24:12,32:14},A=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],B=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],j=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],r0=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],u=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],a=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],h=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],y=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],g=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],w=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],p=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],E=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],M=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],P=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],W=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function I(e){for(var r=[],n=0;n<e.length;n+=4)r.push(e[n]<<24|e[n+1]<<16|e[n+2]<<8|e[n+3]);return r}var _=function(e){if(!(this instanceof _))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:o(e,!0)}),this._prepare()};_.prototype._prepare=function(){var e=S[this.key.length];if(e==null)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var r=0;r<=e;r++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);for(var n=(e+1)*4,c=this.key.length/4,f=I(this.key),m,r=0;r<c;r++)m=r>>2,this._Ke[m][r%4]=f[r],this._Kd[e-m][r%4]=f[r];for(var D=0,C=c,v;C<n;){if(v=f[c-1],f[0]^=B[v>>16&255]<<24^B[v>>8&255]<<16^B[v&255]<<8^B[v>>24&255]^A[D]<<24,D+=1,c!=8)for(var r=1;r<c;r++)f[r]^=f[r-1];else{for(var r=1;r<c/2;r++)f[r]^=f[r-1];v=f[c/2-1],f[c/2]^=B[v&255]^B[v>>8&255]<<8^B[v>>16&255]<<16^B[v>>24&255]<<24;for(var r=c/2+1;r<c;r++)f[r]^=f[r-1]}for(var r=0,N,V;r<c&&C<n;)N=C>>2,V=C%4,this._Ke[N][V]=f[r],this._Kd[e-N][V]=f[r++],C++}for(var N=1;N<e;N++)for(var V=0;V<4;V++)v=this._Kd[N][V],this._Kd[N][V]=E[v>>24&255]^M[v>>16&255]^P[v>>8&255]^W[v&255]},_.prototype.encrypt=function(e){if(e.length!=16)throw new Error("invalid plaintext size (must be 16 bytes)");for(var r=this._Ke.length-1,n=[0,0,0,0],c=I(e),f=0;f<4;f++)c[f]^=this._Ke[0][f];for(var m=1;m<r;m++){for(var f=0;f<4;f++)n[f]=r0[c[f]>>24&255]^u[c[(f+1)%4]>>16&255]^a[c[(f+2)%4]>>8&255]^h[c[(f+3)%4]&255]^this._Ke[m][f];c=n.slice()}for(var D=s(16),C,f=0;f<4;f++)C=this._Ke[r][f],D[4*f]=(B[c[f]>>24&255]^C>>24)&255,D[4*f+1]=(B[c[(f+1)%4]>>16&255]^C>>16)&255,D[4*f+2]=(B[c[(f+2)%4]>>8&255]^C>>8)&255,D[4*f+3]=(B[c[(f+3)%4]&255]^C)&255;return D},_.prototype.decrypt=function(e){if(e.length!=16)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var r=this._Kd.length-1,n=[0,0,0,0],c=I(e),f=0;f<4;f++)c[f]^=this._Kd[0][f];for(var m=1;m<r;m++){for(var f=0;f<4;f++)n[f]=y[c[f]>>24&255]^g[c[(f+3)%4]>>16&255]^w[c[(f+2)%4]>>8&255]^p[c[(f+1)%4]&255]^this._Kd[m][f];c=n.slice()}for(var D=s(16),C,f=0;f<4;f++)C=this._Kd[r][f],D[4*f]=(j[c[f]>>24&255]^C>>24)&255,D[4*f+1]=(j[c[(f+3)%4]>>16&255]^C>>16)&255,D[4*f+2]=(j[c[(f+2)%4]>>8&255]^C>>8)&255,D[4*f+3]=(j[c[(f+1)%4]&255]^C)&255;return D};var $=function(e){if(!(this instanceof $))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new _(e)};$.prototype.encrypt=function(e){if(e=o(e),e.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var r=s(e.length),n=s(16),c=0;c<e.length;c+=16)i(e,n,0,c,c+16),n=this._aes.encrypt(n),i(n,r,c);return r},$.prototype.decrypt=function(e){if(e=o(e),e.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var r=s(e.length),n=s(16),c=0;c<e.length;c+=16)i(e,n,0,c,c+16),n=this._aes.decrypt(n),i(n,r,c);return r};var G=function(e,r){if(!(this instanceof G))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",!r)r=s(16);else if(r.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastCipherblock=o(r,!0),this._aes=new _(e)};G.prototype.encrypt=function(e){if(e=o(e),e.length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var r=s(e.length),n=s(16),c=0;c<e.length;c+=16){i(e,n,0,c,c+16);for(var f=0;f<16;f++)n[f]^=this._lastCipherblock[f];this._lastCipherblock=this._aes.encrypt(n),i(this._lastCipherblock,r,c)}return r},G.prototype.decrypt=function(e){if(e=o(e),e.length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var r=s(e.length),n=s(16),c=0;c<e.length;c+=16){i(e,n,0,c,c+16),n=this._aes.decrypt(n);for(var f=0;f<16;f++)r[c+f]=n[f]^this._lastCipherblock[f];i(e,this._lastCipherblock,0,c,c+16)}return r};var L=function(e,r,n){if(!(this instanceof L))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",!r)r=s(16);else if(r.length!=16)throw new Error("invalid initialation vector size (must be 16 size)");n||(n=1),this.segmentSize=n,this._shiftRegister=o(r,!0),this._aes=new _(e)};L.prototype.encrypt=function(e){if(e.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var r=o(e,!0),n,c=0;c<r.length;c+=this.segmentSize){n=this._aes.encrypt(this._shiftRegister);for(var f=0;f<this.segmentSize;f++)r[c+f]^=n[f];i(this._shiftRegister,this._shiftRegister,0,this.segmentSize),i(r,this._shiftRegister,16-this.segmentSize,c,c+this.segmentSize)}return r},L.prototype.decrypt=function(e){if(e.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var r=o(e,!0),n,c=0;c<r.length;c+=this.segmentSize){n=this._aes.encrypt(this._shiftRegister);for(var f=0;f<this.segmentSize;f++)r[c+f]^=n[f];i(this._shiftRegister,this._shiftRegister,0,this.segmentSize),i(e,this._shiftRegister,16-this.segmentSize,c,c+this.segmentSize)}return r};var J=function(e,r){if(!(this instanceof J))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",!r)r=s(16);else if(r.length!=16)throw new Error("invalid initialation vector size (must be 16 bytes)");this._lastPrecipher=o(r,!0),this._lastPrecipherIndex=16,this._aes=new _(e)};J.prototype.encrypt=function(e){for(var r=o(e,!0),n=0;n<r.length;n++)this._lastPrecipherIndex===16&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),r[n]^=this._lastPrecipher[this._lastPrecipherIndex++];return r},J.prototype.decrypt=J.prototype.encrypt;var T=function(e){if(!(this instanceof T))throw Error("Counter must be instanitated with `new`");e!==0&&!e&&(e=1),typeof e=="number"?(this._counter=s(16),this.setValue(e)):this.setBytes(e)};T.prototype.setValue=function(e){if(typeof e!="number"||parseInt(e)!=e)throw new Error("invalid counter value (must be an integer)");for(var r=15;r>=0;--r)this._counter[r]=e%256,e=e>>8},T.prototype.setBytes=function(e){if(e=o(e,!0),e.length!=16)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=e},T.prototype.increment=function(){for(var e=15;e>=0;e--)if(this._counter[e]===255)this._counter[e]=0;else{this._counter[e]++;break}};var U=function(e,r){if(!(this instanceof U))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",r instanceof T||(r=new T(r)),this._counter=r,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new _(e)};U.prototype.encrypt=function(e){for(var r=o(e,!0),n=0;n<r.length;n++)this._remainingCounterIndex===16&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),r[n]^=this._remainingCounter[this._remainingCounterIndex++];return r},U.prototype.decrypt=U.prototype.encrypt;function Q(e){e=o(e,!0);var r=16-e.length%16,n=s(e.length+r);i(e,n);for(var c=e.length;c<n.length;c++)n[c]=r;return n}function z(e){if(e=o(e,!0),e.length<16)throw new Error("PKCS#7 invalid length");var r=e[e.length-1];if(r>16)throw new Error("PKCS#7 padding byte out of range");for(var n=e.length-r,c=0;c<r;c++)if(e[n+c]!==r)throw new Error("PKCS#7 invalid padding byte");var f=s(n);return i(e,f,0,0,n),f}var O={AES:_,Counter:T,ModeOfOperation:{ecb:$,cbc:G,cfb:L,ofb:J,ctr:U},utils:{hex:k,utf8:F},padding:{pkcs7:{pad:Q,strip:z}},_arrayTest:{coerceArray:o,createArray:s,copyArray:i}};t.exports=O})()})(H0);var Kx=H0.exports;const z0="json-wallets/5.7.0";const Lx=new q(z0);function gx(t){let x=null;try{x=JSON.parse(t)}catch{return!1}return x.encseed&&x.ethaddr}function yx(t){let x=null;try{x=JSON.parse(t)}catch{return!1}return!(!x.version||parseInt(x.version)!==x.version||parseInt(x.version)!==3)}function Sx(t){if(gx(t))try{return g0(JSON.parse(t).ethaddr)}catch{return null}if(yx(t))try{return g0(JSON.parse(t).address)}catch{return null}return null}var N0={exports:{}};(function(t,x){(function(d){function l(u){const a=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);let h=1779033703,y=3144134277,g=1013904242,w=2773480762,p=1359893119,E=2600822924,M=528734635,P=1541459225;const W=new Uint32Array(64);function I(U){let Q=0,z=U.length;for(;z>=64;){let O=h,e=y,r=g,n=w,c=p,f=E,m=M,D=P,C,v,N,V,o0;for(v=0;v<16;v++)N=Q+v*4,W[v]=(U[N]&255)<<24|(U[N+1]&255)<<16|(U[N+2]&255)<<8|U[N+3]&255;for(v=16;v<64;v++)C=W[v-2],V=(C>>>17|C<<32-17)^(C>>>19|C<<32-19)^C>>>10,C=W[v-15],o0=(C>>>7|C<<32-7)^(C>>>18|C<<32-18)^C>>>3,W[v]=(V+W[v-7]|0)+(o0+W[v-16]|0)|0;for(v=0;v<64;v++)V=(((c>>>6|c<<32-6)^(c>>>11|c<<32-11)^(c>>>25|c<<32-25))+(c&f^~c&m)|0)+(D+(a[v]+W[v]|0)|0)|0,o0=((O>>>2|O<<32-2)^(O>>>13|O<<32-13)^(O>>>22|O<<32-22))+(O&e^O&r^e&r)|0,D=m,m=f,f=c,c=n+V|0,n=r,r=e,e=O,O=V+o0|0;h=h+O|0,y=y+e|0,g=g+r|0,w=w+n|0,p=p+c|0,E=E+f|0,M=M+m|0,P=P+D|0,Q+=64,z-=64}}I(u);let _,$=u.length%64,G=u.length/536870912|0,L=u.length<<3,J=$<56?56:120,T=u.slice(u.length-$,u.length);for(T.push(128),_=$+1;_<J;_++)T.push(0);return T.push(G>>>24&255),T.push(G>>>16&255),T.push(G>>>8&255),T.push(G>>>0&255),T.push(L>>>24&255),T.push(L>>>16&255),T.push(L>>>8&255),T.push(L>>>0&255),I(T),[h>>>24&255,h>>>16&255,h>>>8&255,h>>>0&255,y>>>24&255,y>>>16&255,y>>>8&255,y>>>0&255,g>>>24&255,g>>>16&255,g>>>8&255,g>>>0&255,w>>>24&255,w>>>16&255,w>>>8&255,w>>>0&255,p>>>24&255,p>>>16&255,p>>>8&255,p>>>0&255,E>>>24&255,E>>>16&255,E>>>8&255,E>>>0&255,M>>>24&255,M>>>16&255,M>>>8&255,M>>>0&255,P>>>24&255,P>>>16&255,P>>>8&255,P>>>0&255]}function o(u,a,h){u=u.length<=64?u:l(u);const y=64+a.length+4,g=new Array(y),w=new Array(64);let p,E=[];for(p=0;p<64;p++)g[p]=54;for(p=0;p<u.length;p++)g[p]^=u[p];for(p=0;p<a.length;p++)g[64+p]=a[p];for(p=y-4;p<y;p++)g[p]=0;for(p=0;p<64;p++)w[p]=92;for(p=0;p<u.length;p++)w[p]^=u[p];function M(){for(let P=y-1;P>=y-4;P--){if(g[P]++,g[P]<=255)return;g[P]=0}}for(;h>=32;)M(),E=E.concat(l(w.concat(l(g)))),h-=32;return h>0&&(M(),E=E.concat(l(w.concat(l(g))).slice(0,h))),E}function s(u,a,h,y,g){let w;for(S(u,(2*h-1)*16,g,0,16),w=0;w<2*h;w++)k(u,w*16,g,16),F(g,y),S(g,0,u,a+w*16,16);for(w=0;w<h;w++)S(u,a+w*2*16,u,w*16,16);for(w=0;w<h;w++)S(u,a+(w*2+1)*16,u,(w+h)*16,16)}function i(u,a){return u<<a|u>>>32-a}function F(u,a){S(u,0,a,0,16);for(let h=8;h>0;h-=2)a[4]^=i(a[0]+a[12],7),a[8]^=i(a[4]+a[0],9),a[12]^=i(a[8]+a[4],13),a[0]^=i(a[12]+a[8],18),a[9]^=i(a[5]+a[1],7),a[13]^=i(a[9]+a[5],9),a[1]^=i(a[13]+a[9],13),a[5]^=i(a[1]+a[13],18),a[14]^=i(a[10]+a[6],7),a[2]^=i(a[14]+a[10],9),a[6]^=i(a[2]+a[14],13),a[10]^=i(a[6]+a[2],18),a[3]^=i(a[15]+a[11],7),a[7]^=i(a[3]+a[15],9),a[11]^=i(a[7]+a[3],13),a[15]^=i(a[11]+a[7],18),a[1]^=i(a[0]+a[3],7),a[2]^=i(a[1]+a[0],9),a[3]^=i(a[2]+a[1],13),a[0]^=i(a[3]+a[2],18),a[6]^=i(a[5]+a[4],7),a[7]^=i(a[6]+a[5],9),a[4]^=i(a[7]+a[6],13),a[5]^=i(a[4]+a[7],18),a[11]^=i(a[10]+a[9],7),a[8]^=i(a[11]+a[10],9),a[9]^=i(a[8]+a[11],13),a[10]^=i(a[9]+a[8],18),a[12]^=i(a[15]+a[14],7),a[13]^=i(a[12]+a[15],9),a[14]^=i(a[13]+a[12],13),a[15]^=i(a[14]+a[13],18);for(let h=0;h<16;++h)u[h]+=a[h]}function k(u,a,h,y){for(let g=0;g<y;g++)h[g]^=u[a+g]}function S(u,a,h,y,g){for(;g--;)h[y++]=u[a++]}function A(u){if(!u||typeof u.length!="number")return!1;for(let a=0;a<u.length;a++){const h=u[a];if(typeof h!="number"||h%1||h<0||h>=256)return!1}return!0}function B(u,a){if(typeof u!="number"||u%1)throw new Error("invalid "+a);return u}function j(u,a,h,y,g,w,p){if(h=B(h,"N"),y=B(y,"r"),g=B(g,"p"),w=B(w,"dkLen"),h===0||(h&h-1)!==0)throw new Error("N must be power of 2");if(h>2147483647/128/y)throw new Error("N too large");if(y>2147483647/128/g)throw new Error("r too large");if(!A(u))throw new Error("password must be an array or buffer");if(u=Array.prototype.slice.call(u),!A(a))throw new Error("salt must be an array or buffer");a=Array.prototype.slice.call(a);let E=o(u,a,g*128*y);const M=new Uint32Array(g*32*y);for(let c=0;c<M.length;c++){const f=c*4;M[c]=(E[f+3]&255)<<24|(E[f+2]&255)<<16|(E[f+1]&255)<<8|(E[f+0]&255)<<0}const P=new Uint32Array(64*y),W=new Uint32Array(32*y*h),I=32*y,_=new Uint32Array(16),$=new Uint32Array(16),G=g*h*2;let L=0,J=null,T=!1,U=0,Q=0,z,O;const e=p?parseInt(1e3/y):4294967295,r=typeof setImmediate!="undefined"?setImmediate:setTimeout,n=function(){if(T)return p(new Error("cancelled"),L/G);let c;switch(U){case 0:O=Q*32*y,S(M,O,P,0,I),U=1,z=0;case 1:c=h-z,c>e&&(c=e);for(let m=0;m<c;m++)S(P,0,W,(z+m)*I,I),s(P,I,y,_,$);if(z+=c,L+=c,p){const m=parseInt(1e3*L/G);if(m!==J){if(T=p(null,L/G),T)break;J=m}}if(z<h)break;z=0,U=2;case 2:c=h-z,c>e&&(c=e);for(let m=0;m<c;m++){const D=(2*y-1)*16,C=P[D]&h-1;k(W,C*I,P,I),s(P,I,y,_,$)}if(z+=c,L+=c,p){const m=parseInt(1e3*L/G);if(m!==J){if(T=p(null,L/G),T)break;J=m}}if(z<h)break;if(S(P,0,M,O,I),Q++,Q<g){U=0;break}E=[];for(let m=0;m<M.length;m++)E.push(M[m]>>0&255),E.push(M[m]>>8&255),E.push(M[m]>>16&255),E.push(M[m]>>24&255);const f=o(u,E,w);return p&&p(null,1,f),f}p&&r(n)};if(!p)for(;;){const c=n();if(c!=null)return c}n()}const r0={scrypt:function(u,a,h,y,g,w,p){return new Promise(function(E,M){let P=0;p&&p(0),j(u,a,h,y,g,w,function(W,I,_){if(W)M(W);else if(_)p&&P!==1&&p(1),E(new Uint8Array(_));else if(p&&I!==P)return P=I,p(I)})})},syncScrypt:function(u,a,h,y,g,w){return new Uint8Array(j(u,a,h,y,g,w))}};t.exports=r0})()})(N0);var Ox=N0.exports,Ux=globalThis&&globalThis.__awaiter||function(t,x,d,b){function l(o){return o instanceof d?o:new d(function(s){s(o)})}return new(d||(d=Promise))(function(o,s){function i(S){try{k(b.next(S))}catch(A){s(A)}}function F(S){try{k(b.throw(S))}catch(A){s(A)}}function k(S){S.done?o(S.value):l(S.value).then(i,F)}k((b=b.apply(t,x||[])).next())})};const Wx=new q(z0);const wx="wallet/5.7.0";var Gx=globalThis&&globalThis.__awaiter||function(t,x,d,b){function l(o){return o instanceof d?o:new d(function(s){s(o)})}return new(d||(d=Promise))(function(o,s){function i(S){try{k(b.next(S))}catch(A){s(A)}}function F(S){try{k(b.throw(S))}catch(A){s(A)}}function k(S){S.done?o(S.value):l(S.value).then(i,F)}k((b=b.apply(t,x||[])).next())})};const Hx=new q(wx);function vx(t,x){return E0(L0(t),x)}function Cx(t,x,d,b){return E0(K0.hash(t,x,d),b)}const Ax="solidity/5.7.0",Ex=new RegExp("^bytes([0-9]+)$"),Px=new RegExp("^(u?int)([0-9]*)$"),kx=new RegExp("^(.*)\\[([0-9]*)\\]$"),Tx="0000000000000000000000000000000000000000000000000000000000000000",c0=new q(Ax);function V0(t,x,d){switch(t){case"address":return d?l0(x,32):R(x);case"string":return X(x);case"bytes":return R(x);case"bool":return x=x?"0x01":"0x00",d?l0(x,32):R(x)}let b=t.match(Px);if(b){let l=parseInt(b[2]||"256");return(b[2]&&String(l)!==b[2]||l%8!==0||l===0||l>256)&&c0.throwArgumentError("invalid number type","type",t),d&&(l=256),x=w0.from(x).toTwos(l),l0(x,l/8)}if(b=t.match(Ex),b){const l=parseInt(b[1]);return(String(l)!==b[1]||l===0||l>32)&&c0.throwArgumentError("invalid bytes type","type",t),R(x).byteLength!==l&&c0.throwArgumentError(`invalid value for ${t}`,"value",x),d?R((x+Tx).substring(0,66)):x}if(b=t.match(kx),b&&Array.isArray(x)){const l=b[1];parseInt(b[2]||String(x.length))!=x.length&&c0.throwArgumentError(`invalid array length for ${t}`,"value",x);const s=[];return x.forEach(function(i){s.push(V0(l,i,!0))}),Y(s)}return c0.throwArgumentError("invalid type","type",t)}function T0(t,x){t.length!=x.length&&c0.throwArgumentError("wrong number of values; expected ${ types.length }","values",x);const d=[];return t.forEach(function(b,l){d.push(V0(b,x[l]))}),H(Y(d))}function Fx(t,x){return S0(T0(t,x))}function Mx(t,x){return e0(T0(t,x))}var zx=Object.freeze(Object.defineProperty({__proto__:null,AbiCoder:X0,defaultAbiCoder:Y0,Fragment:ee,ConstructorFragment:xe,ErrorFragment:ae,EventFragment:ce,FunctionFragment:fe,ParamType:te,FormatTypes:re,checkResultErrors:de,Logger:q,RLP:ne,_fetchData:be,fetchJson:ie,poll:oe,checkProperties:se,deepCopy:le,defineReadOnly:K,getStatic:ue,resolveProperties:j0,shallowCopy:he,arrayify:R,concat:Y,stripZeros:pe,zeroPad:l0,isBytes:me,isBytesLike:ge,defaultPath:ox,HDNode:Z,SigningKey:h0,Interface:ye,LogDescription:Se,TransactionDescription:we,base58:A0,base64:ex,hexlify:H,isHexString:Q0,hexConcat:ve,hexStripZeros:Ce,hexValue:Ae,hexZeroPad:C0,hexDataLength:Ee,hexDataSlice:v0,nameprep:Pe,_toEscapedUtf8String:ke,toUtf8Bytes:X,toUtf8CodePoints:Te,toUtf8String:Fe,Utf8ErrorFuncs:Me,formatBytes32String:Be,parseBytes32String:De,dnsEncode:Re,hashMessage:L0,namehash:_e,isValidName:Ie,id:R0,_TypedDataEncoder:K0,getAddress:g0,getIcapAddress:Ke,getContractAddress:Le,getCreate2Address:Oe,isAddress:Ue,formatEther:Ze,parseEther:qe,formatUnits:Qe,parseUnits:Xe,commify:Ye,computeHmac:n0,keccak256:S0,ripemd160:_0,sha256:e0,sha512:We,randomBytes:px,shuffled:mx,solidityPack:T0,solidityKeccak256:Fx,soliditySha256:Mx,splitSignature:Ge,joinSignature:q0,accessListify:He,parseTransaction:ze,serializeTransaction:Z0,get TransactionTypes(){return Ne},getJsonWalletAddress:Sx,computeAddress:I0,recoverAddress:E0,computePublicKey:Ve,recoverPublicKey:Je,verifyMessage:vx,verifyTypedData:Cx,getAccountPath:lx,mnemonicToEntropy:k0,entropyToMnemonic:G0,isValidMnemonic:sx,mnemonicToSeed:W0,get SupportedAlgorithm(){return p0},get UnicodeNormalizationForm(){return m0},get Utf8ErrorReason(){return $e},Indexed:je},Symbol.toStringTag,{value:"Module"}));const t0="https://api.trongrid.io";function Nx(t,x=!0){return f0({method:"post",url:`${t0}/wallet/getaccountresource`,data:{address:t,visible:x}})}function Vx(t,x=!0){return f0({method:"post",url:`${t0}/wallet/getaccount`,data:{address:t,visible:x}})}function Jx(t,x,d=!0){return f0({method:"post",url:`${t0}/wallet/getcandelegatedmaxsize`,data:{owner_address:t,type:x,visible:d}})}function $x(t,x=Date.now(),d=!0){return f0({method:"post",url:`${t0}/wallet/getcanwithdrawunfreezeamount`,data:{owner_address:t,timestamp:x,visible:d}})}function jx(t,x=!0){return f0({method:"post",url:`${t0}/wallet/getdelegatedresourceaccountindexv2`,data:{value:t,visible:x}})}function Zx(t,x,d=!0){return f0({method:"post",url:`${t0}/wallet/getdelegatedresourcev2`,data:{fromAddress:t,toAddress:x,visible:d}})}export{Vx as a,Jx as b,$x as c,jx as d,Zx as e,Nx as g,zx as u};
